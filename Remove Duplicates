#include <iostream>
#include <vector>
#include <algorithm>
std::vector<int> removeDuplicates(const std::vector<int>& sortedArray) {
    std::vector<int> uniqueArray;
    if (sortedArray.empty()) return uniqueArray;

    uniqueArray.push_back(sortedArray[0]);

    for (size_t i = 1; i < sortedArray.size(); ++i) {
        if (sortedArray[i] != sortedArray[i - 1]) {
            uniqueArray.push_back(sortedArray[i]);
        }
    }

    return uniqueArray;
}

int main() {
    std::vector<int> array = {15, 14, 25, 14, 32, 14, 31};

    std::sort(array.begin(), array.end());

    std::vector<int> sortedUniqueArray = removeDuplicates(array);

    std::cout << "Sorted Array = {";
    for (size_t i = 0; i < sortedUniqueArray.size(); ++i) {
        std::cout << sortedUniqueArray[i];
        if (i < sortedUniqueArray.size() - 1) std::cout << ", ";
    }
    std::cout << "}" << std::endl;

    return 0;
}
